		
		#define BULLET_HIDE(x,from,count) class Bullet##x\
			{\
				type="hide";\
				source="revolving";\
				sourceAddress="mirror";\
				selection=bullet##x;\
				minValue=-1.000000;\
				maxValue= 0.000000;\
				hideValue=((count+x-from-2)/count)+0.00001;\
			};

	class Rotation
	{
	type = "rotation";
	memory = 1;
	minValue = 0;
	maxValue = 1;
	angle0 = 0;
	angle1 = 1;
	};

	class CfgSkeletons
	{
		class Default
		{
			isDiscrete = 1;
			skeletonInherit = "";
			skeletonBones[] = {};
		};
		class Vehicle : Default {};
		
		class Car : Vehicle {
			
			skeletonBones[]=
			{
				"drivewheel","",

				"wheel_1_1_damper_land","",
				"wheel_1_2_damper_land","",
				"wheel_1_3_damper_land","",
				"wheel_1_4_damper_land","",

				"wheel_2_1_damper_land","",
				"wheel_2_2_damper_land","",
				"wheel_2_3_damper_land","", 
				"wheel_2_4_damper_land","",

				"wheel_1_1_damper","wheel_1_1_damper_land",
				"wheel_1_2_damper","wheel_1_2_damper_land",
				"wheel_1_3_damper","wheel_1_3_damper_land",
				"wheel_1_4_damper","wheel_1_4_damper_land",

				"wheel_2_1_damper","wheel_2_1_damper_land",
				"wheel_2_2_damper","wheel_2_2_damper_land",
				"wheel_2_3_damper","wheel_2_3_damper_land",
				"wheel_2_4_damper","wheel_2_4_damper_land",

				"wheel_1_1_steering","wheel_1_1_damper",
				"wheel_1_2_steering","wheel_1_2_damper",
				"wheel_1_3_steering","wheel_1_3_damper",
				"wheel_1_4_steering","wheel_1_4_damper",

				"wheel_2_1_steering","wheel_2_1_damper",
				"wheel_2_2_steering","wheel_2_2_damper",
				"wheel_2_3_steering","wheel_2_3_damper",
				"wheel_2_4_steering","wheel_2_4_damper",

				"wheel_1_1","wheel_1_1_steering",
				"wheel_1_2","wheel_1_2_steering",
				"wheel_1_3","wheel_1_3_steering",
				"wheel_1_4","wheel_1_4_steering",

				"wheel_2_1","wheel_2_1_steering",
				"wheel_2_2","wheel_2_2_steering",
				"wheel_2_3","wheel_2_3_steering",
				"wheel_2_4","wheel_2_4_steering",

				"wheel_1_1_unhide","wheel_1_1",
				"wheel_1_2_unhide","wheel_1_2",
				"wheel_1_3_unhide","wheel_1_3",
				"wheel_1_4_unhide","wheel_1_4",

				"wheel_2_1_unhide","wheel_2_1",
				"wheel_2_2_unhide","wheel_2_2",
				"wheel_2_3_unhide","wheel_2_3",
				"wheel_2_4_unhide","wheel_2_4",

				"wheel_1_1_hide","wheel_1_1",
				"wheel_1_2_hide","wheel_1_2",
				"wheel_1_3_hide","wheel_1_3",
				"wheel_1_4_hide","wheel_1_4",

				"wheel_2_1_hide","wheel_2_1",
				"wheel_2_2_hide","wheel_2_2",
				"wheel_2_3_hide","wheel_2_3",
				"wheel_2_4_hide","wheel_2_4",

				"OtocVez","",
				"OtocHlaven","OtocVez",

				"damageHide","",
				"damageVez","OtocVez",
				"damageHlaven","OtocHlaven",
				"Light_R","",
				"Light_L","",

				"ukaz_rychlo","",
				"ukaz_rychlo2","",
				"ukaz_rpm","",
				"mph","",
				"rpm","",
				"fuel","",
				"fuel_1","",
				"fuel_01","",
				"fuel_2","",
				"fuel_3","",
				"prop_01","",
				"prop_02","",
				"prop_2","",
				"prop_1","",
				"glass1","damageHide",
				"glass2","damageHide",
				"glass3","damageHide",
				"glass4","damageHide"
			};
		};
		
		class vurtual_MTVRSkeleton:Car
		{
			isDiscrete=1;
			skeletonInherit="Car";
			skeletonBones[]=
			{
				"cab_transported","",
				"cab_fold_front","",
				"cab_fold_top","cab_fold_front",
				"mirror_fold_left","cab_fold_front",
				"mirror_fold_right","cab_fold_front",
				"glass1_viv","glass1",
				"glass2_viv","glass2",
				"glass3_viv","glass3",
				"glass4_viv","glass4",
				"door_left","",
				"door_right","",
				"door_left_transported","door_left",
				"door_right_transported","door_right",
				"wheel_1_1_viv","wheel_1_1_hide",
				"wheel_1_2_viv","wheel_1_2_hide",
				"wheel_1_3_viv","wheel_1_3_hide",
				"wheel_1_4_viv","wheel_1_4_hide",

				"wheel_2_1_viv","wheel_2_1_hide",
				"wheel_2_2_viv","wheel_2_2_hide",
				"wheel_2_3_viv","wheel_2_3_hide",
				"wheel_2_4_viv","wheel_2_4_hide",
				
				"hatch_exhaust","cab_transported",
				"hatch_1_1","cab_fold_top",
				"bed_hide","cab_transported",
				"bedside_left1","bed_hide",
				"bedside_right1","bed_hide",
				"bedside_left2","bed_hide",
				"bedside_right2","bed_hide",
				"sides","bed_hide",
				"bedseat_left1","bedside_left1",
				"bedseat_right1","bedside_right1",
				"bedseat_left2","bedside_left2",
				"bedseat_right2","bedside_right2",
				"bedseat_left_stand","bed_hide",
				"bedseat_right_stand","bedseat_left_stand",
				"cargo_bows","bed_hide",
				"cargo_bows_stored","bed_hide",
				"cargo_tarp_hide","bed_hide",
				"cargo_tarp","cargo_tarp_hide",
				"brakelight_blackout","",
				"brakelight_normal","",
				"blackout_marker","",
				"flatrack",""


			};
		};
	};

	class CfgModels
	{
		class Vehicle
		{
			sections[]={};
			sectionsInherit="";
			skeletonName="";
			
		};
		class Car: Vehicle
		{
			sectionsInherit="Vehicle";
			sections[]=
			{	
				"ammo",
				"sklo predni p",
				"sklo predni l",
				"zadni svetlo",
				"brzdove svetlo",
				"spz",
				"karoserie",
				"motor",
				"zbran",
				"vez",
				"zbytek",
				"clan",
				"clan_sign",
				"zasleh",
				"P svetlo",
				"L svetlo",
				"Light_R",
				"Light_L",
				"palivo",
				"glass1",
				"glass2",
				"glass3",
				"glass4"
			};
			skeletonName="Car";
			
			class Animations
			{

			class damageHide
			{
				type="hide";
				source="damage";
				selection="damageHide";
				hideValue=1.0;
			};

			class damageHideVez:damageHide
			{
				selection="OtocVez";
			};
			class damageHideHlaven:damageHide
			{
				selection="OtocHlaven";
			};

			class wheel_1_1_destruct
			{
				type="hide";
				selection="wheel_1_1_hide";
				source="HitLFWheel";
				minValue = 0; 
				maxValue = 1;
				hidevalue = 0.99;
			};
			class wheel_1_2_destruct:wheel_1_1_destruct {source="HitLBWheel";selection="wheel_1_2_hide";};
			class wheel_1_3_destruct:wheel_1_1_destruct {source="HitLMWheel";selection="wheel_1_3_hide";};
			class wheel_1_4_destruct:wheel_1_1_destruct {source="HitLF2Wheel";selection="wheel_1_4_hide";};

			class wheel_2_1_destruct:wheel_1_1_destruct {source="HitRFWheel";selection="wheel_2_1_hide";};
			class wheel_2_2_destruct:wheel_1_1_destruct {source="HitRBWheel";selection="wheel_2_2_hide";};
			class wheel_2_3_destruct:wheel_1_1_destruct {source="HitRMWheel";selection="wheel_2_3_hide";};
			class wheel_2_4_destruct:wheel_1_1_destruct {source="HitRF2Wheel";selection="wheel_2_4_hide";};

			class wheel_1_1_destruct_unhide
			{
				type="hide";
				selection="wheel_1_1_unhide";
				source="HitLFWheel";
				minValue = -1;
				maxValue = 0; 
				hidevalue = 0.01;
				sourceAddress="mirror";
			};
			class wheel_1_2_destruct_unhide:wheel_1_1_destruct_unhide {source="HitLBWheel";selection="wheel_1_2_unhide";};
			class wheel_1_3_destruct_unhide:wheel_1_1_destruct_unhide {source="HitLMWheel";selection="wheel_1_3_unhide";};
			class wheel_1_4_destruct_unhide:wheel_1_1_destruct_unhide {source="HitLF2Wheel";selection="wheel_1_4_unhide";};

			class wheel_2_1_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRFWheel";selection="wheel_2_1_unhide";};
			class wheel_2_2_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRBWheel";selection="wheel_2_2_unhide";};
			class wheel_2_3_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRMWheel";selection="wheel_2_3_unhide";};
			class wheel_2_4_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRF2Wheel";selection="wheel_2_4_unhide";};

			#define DamageOffset 0.2

			class wheel_1_1_Damage:wheel_1_1_destruct
				{
				type="translation";
				axis="Basic_Damper_Destruct_Axis";
				memory=1;
				selection="wheel_1_1_damper_land";
				source="HitLFWheel";
				minValue = 0.0;
				maxValue = 1;
				offset0 = 0;
				offset1 = DamageOffset;
				};
				
				class wheel_1_2_Damage:wheel_1_1_Damage {source="HitLBWheel";selection="wheel_1_2_damper_land";};
				class wheel_1_3_Damage:wheel_1_1_Damage {source="HitLMWheel";selection="wheel_1_3_damper_land";};
				class wheel_1_4_Damage:wheel_1_1_Damage {source="HitLF2Wheel";selection="wheel_1_4_damper_land";};

				class wheel_2_1_Damage:wheel_1_1_Damage {source="HitRFWheel";selection="wheel_2_1_damper_land";};
				class wheel_2_2_Damage:wheel_1_1_Damage {source="HitRBWheel";selection="wheel_2_2_damper_land";};
				class wheel_2_3_Damage:wheel_1_1_Damage {source="HitRMWheel";selection="wheel_2_3_damper_land";};
				class wheel_2_4_Damage:wheel_1_1_Damage {source="HitRF2Wheel";selection="wheel_2_4_damper_land";};



				class wheel_1_1_Damper_Damage_BackAnim:wheel_1_1_Damage {selection="wheel_1_1_damper";offset1 = -1*DamageOffset;};
				class wheel_1_2_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitLBWheel";selection="wheel_1_2_damper";};
				class wheel_1_3_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitLMWheel";selection="wheel_1_3_damper";};
				class wheel_1_4_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitLF2Wheel";selection="wheel_1_4_damper";};

				class wheel_2_1_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRFWheel";selection="wheel_2_1_damper";};
				class wheel_2_2_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRBWheel";selection="wheel_2_2_damper";};
				class wheel_2_3_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRMWheel";selection="wheel_2_3_damper";};
				class wheel_2_4_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRF2Wheel";selection="wheel_2_4_damper";};

					
				class Glass1_destruct
				{
				type="hide";
				selection="glass1";
				source="HitGlass1";
				minValue = 0; 
				maxValue = 1; 
				hidevalue = 0.99;
				};
				class Glass2_destruct:Glass1_destruct{selection="glass2";source="HitGlass2";};
				class Glass3_destruct:Glass1_destruct{selection="glass3";source="HitGlass3";};
				class Glass4_destruct:Glass1_destruct{selection="glass4";source="HitGlass4";};

					
			class Fuel: Rotation
			{
				source="fuel";
				selection="fuel";
				axis="fuel_axis";
				maxValue=1;
				memory=1;
				angle0="rad -110";
				angle1=0;
			};
			class IndicatorSpeed: Rotation
			{
				source="speed";
				selection="mph";
				axis="mph_axis";
				memory=1;
				maxValue=38.900002;
				angle1="rad -265";
			};
			class IndicatorFuel: Rotation
			{
				type="rotation";
				source="fuel";
				selection="fuel_1";
				axis="fuel_1_axis";
				memory=1;
				minValue=0.000000;
				maxValue=1.000000;
				angle0=-0.087266;
				angle1=-1.658063;
			};
			class IndicatorRPM: Rotation
			{
				source="rpm";
				selection="rpm";
				axis="rpm_axis";
				memory=1;
				angle1="rad 80";
			};
			
				class DrivingWheel: Rotation
				{
					source="drivingWheel";
					selection="drivewheel";
					axis="drivewheel_axis";
					minValue=-1;
					maxValue=1;
					angle0=(rad -80);
					angle1=(rad 80);
				};
				class wheel_1_1_pad
				{
					type="rotationY";
					source="drivingWheel";
					memory = 1;
					animPeriod = 0;
					selection="wheel_1_1_pad";
					axis="wheel_1_1_steering_axis";
					minValue="rad -180";
					maxValue="rad +180";
					angle0="rad +45";
					angle1="rad -45";
				};
				class wheel_2_1_pad
				{
					type="rotationY";
					source="drivingWheel";
					memory = 1;
					animPeriod = 0;
					selection="wheel_2_1_pad";
					axis="wheel_2_1_steering_axis";
					minValue="rad -180";
					maxValue="rad +180";
					angle0="rad +45";
					angle1="rad -45";
				};
				class TurnFrontWheelR
				{
					type="rotationY";
					source="drivingWheel";
					memory = 1;
					animPeriod = 0;
					selection="wheel_2_1_steering";
					axis="wheel_2_1_steering_axis";
					minValue="rad -180";
					maxValue="rad +180";
					angle0="rad +45";
					angle1="rad -45";
				};
				class TurnFrontWheelL: TurnFrontWheelR
				{
					selection="wheel_1_1_steering";
					axis="wheel_1_1_steering_axis";
				};
				class TurnFrontWheelR2: TurnFrontWheelL
				{
					selection="posun wheel_1_1";
				};
				class TurnFrontWheelL2: TurnFrontWheelR
				{
					selection="posun wheel_2_1";
				};
				class wheel_1_1
				{
					type="rotationX";
					source="wheel";
					memory = 1;//by default
					animPeriod = 0;//Unknown
					selection="wheel_1_1";
					axis="wheel_1_1_axis";
					minValue = 0.0;
					maxValue = 1.0;
					minPhase = 0.0;
					maxPhase = 1.0;
					angle0 = 0;
					angle1 = "rad -360";
				};
				class wheel_1_2: wheel_1_1
				{
					selection="wheel_1_2";
					axis="wheel_1_2_axis";
				};
				class wheel_1_3: wheel_1_1
				{
					selection="wheel_1_3";
					axis="wheel_1_3_axis";
				};
				class wheel_1_4: wheel_1_1
				{
					selection="wheel_1_4";
					axis="wheel_1_4_axis";
				};
				class wheel_2_1: wheel_1_1
				{
					selection="wheel_2_1";
					axis="wheel_2_1_axis";
				};
				class wheel_2_2: wheel_1_1
				{
					selection="wheel_2_2";
					axis="wheel_2_2_axis";
				};
				class wheel_2_3: wheel_1_1
				{
					selection="wheel_2_3";
					axis="wheel_2_3_axis";
				};
				class wheel_2_4: wheel_1_1
				{
					selection="wheel_2_4";
					axis="wheel_2_4_axis";
				};
				class Wheel_1_1_Damper
				{
					type="translation";
					source="damper";
					selection="wheel_1_1_damper_land";
					axis="posun wheel_1_1";
					animPeriod = 1;
					minValue="0";
					maxValue="1";
					offset0= "0.5";
					offset1= "-0.25";
					memory=1;
				};
				class wheel_2_1_Damper: wheel_1_1_Damper
				{
					selection="wheel_2_1_damper_land";
					axis="posun wheel_2_1";
				};
				class wheel_1_2_Damper: wheel_1_1_Damper
				{
					selection="wheel_1_2_damper_land";
					axis="posun wheel_1_2";
				};
				class wheel_1_3_Damper: wheel_1_1_Damper
				{
					selection="wheel_1_3_damper_land";
					axis="posun wheel_1_3";
				};
				class wheel_1_4_Damper: wheel_1_1_Damper
				{
					selection="wheel_1_4_damper_land";
					axis="posun wheel_1_4";
				};
				class wheel_2_2_Damper: wheel_1_1_Damper
				{
					selection="wheel_2_2_damper_land";
					axis="posun wheel_2_2";
				};
				class wheel_2_3_Damper: wheel_1_1_Damper
				{
					selection="wheel_2_3_damper_land";
					axis="posun wheel_2_3";
				};
				class wheel_2_4_Damper: wheel_1_1_Damper
				{
					selection="wheel_2_4_damper_land";
					axis="posun wheel_2_4";
				};
				class damageVez: damageHide
				{
					selection="damageVez";
				};
				class damageHlaven: damageHide
				{
					selection="damageHlaven";
				};
			};
		};

		class mtvr_base: Car
		{
			sectionsInherit="Car";
			sections[]=
			{
				"camo1",
				"camo2"
			};
			
			skeletonName="vurtual_MTVRSkeleton";
			
			class Animations: Animations
			{
				
				class wheel_1_1_Damage:wheel_1_1_Damage {offset1 = 0.20;};
				class wheel_1_2_Damage:wheel_1_2_Damage {offset1 = 0.20;};
				class wheel_1_3_Damage:wheel_1_2_Damage {offset1 = 0.20;};
				class wheel_1_4_Damage:wheel_1_2_Damage {offset1 = 0.20;};
				class wheel_2_1_Damage:wheel_2_1_Damage {offset1 = 0.20;};
				class wheel_2_2_Damage:wheel_2_2_Damage {offset1 = 0.20;};
				class wheel_2_3_Damage:wheel_2_3_Damage {offset1 = 0.20;};
				class wheel_2_4_Damage:wheel_2_4_Damage {offset1 = 0.20;};
				class wheel_1_1_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {offset1 = -0.20;};
				class wheel_1_2_Damper_Damage_BackAnim:wheel_1_2_Damper_Damage_BackAnim {offset1 = -0.20;};
				class wheel_2_1_Damper_Damage_BackAnim:wheel_2_1_Damper_Damage_BackAnim {offset1 = -0.20;};
				class wheel_2_2_Damper_Damage_BackAnim:wheel_2_2_Damper_Damage_BackAnim {offset1 = -0.20;};
				class wheel_2_3_Damper_Damage_BackAnim:wheel_2_3_Damper_Damage_BackAnim {offset1 = -0.20;};
				class wheel_2_4_Damper_Damage_BackAnim:wheel_2_4_Damper_Damage_BackAnim {offset1 = -0.20;};
		
	

				class cab_transported {
					type = "hide";
					source = "cab_transported";
					selection = "cab_transported";
					minValue = 0;
					maxValue = 1;
					hideValue = 0.1;
					animPeriod = 0.1;
				};
				class cab_fold_front {
					type = "rotation";
					source = "cab_transported";
					selection = "cab_fold_front";
					axis = "cab_fold_front_axis";
					minValue = 0;
					maxValue = 1;
					angle0 = 0;
					angle1 = "rad -115";
					memory=1;
				};
				class cab_fold_top: cab_fold_front {
					selection = "cab_fold_top";
					axis = "cab_fold_top_axis";
					angle1 = "rad 110";
				};
				class miror_fold_left: cab_fold_front {
					angle1 = "rad -100";
					selection = "mirror_fold_left";
					axis = "mirror_fold_left_axis";
				};
				class miror_fold_right: cab_fold_front {
					angle1 = "rad 100";
					selection = "mirror_fold_right";
					axis = "mirror_fold_right_axis";
				};
				class door_left {
					selection = "door_left";
					angle0=0;
					angle1="rad -70";
					axis = "door_left_axis";
					memory=1;
					type = "rotation";
					minValue=0;
					maxValue=1;
					source = "door_left";
				};
				class door_right: door_left {
					selection = "door_right";
					axis = "door_right_axis";
					source = "door_right";
					angle1="rad 70";
				};
				class door_left_transported: door_left {
					selection = "door_left_transported";
					source = "cab_transported";
					axis = "door_left_viv_axis";
					angle1="rad 180";
				};
				class door_right_transported: door_left_transported {
					selection = "door_right_transported";
					axis = "door_right_viv_axis";
					angle1="rad -180";
				};
				class door_left_glass: door_left {
					selection = "glass2_viv";
				};
				class door_right_glass: door_right {
					selection = "glass3_viv";
				};
				class glass1_viv: cab_fold_front {
					selection = "glass1_viv";
				};
				class glass2_viv: cab_transported {
					selection = "glass2_viv";
				};
				class glass3_viv: cab_transported {
					selection = "glass3_viv";
				};
				class glass4_viv: cab_transported {
					selection = "glass4_viv";
				};
				class wheel_1_1_viv {
					type="translation";
					source="vehicleTransported";
					selection="wheel_1_1_viv";
					axis="posun wheel_1_1";
					animPeriod = 0.1;
					minValue="0";
					maxValue="1";
					offset0= "0";
					offset1= "-1";
					memory=1;
				};
				class wheel_1_2_viv: wheel_1_1_viv {
					selection = "wheel_1_2_viv";
				};
				class wheel_1_3_viv: wheel_1_1_viv {
					selection = "wheel_1_3_viv";
				};
				class wheel_1_4_viv: wheel_1_1_viv {
					selection = "wheel_1_4_viv";
				};
				class wheel_2_1_viv: wheel_1_1_viv {
					selection = "wheel_2_1_viv";
				};
				class wheel_2_2_viv: wheel_1_1_viv {
					selection = "wheel_2_2_viv";
				};
				class wheel_2_3_viv: wheel_1_1_viv {
					selection = "wheel_2_3_viv";
				};
				class wheel_2_4_viv: wheel_1_1_viv {
					selection = "wheel_2_4_viv";
				};
				class wheel_1_3_pad {
					type="rotationY";
					source="drivingWheel";
					memory = 1;
					animPeriod = 0;
					selection="wheel_1_3_pad";
					axis="wheel_1_3_steering_axis";
					minValue="rad -180";
					maxValue="rad +180";
					angle0="rad -30";
					angle1="rad +30";
				};
				class wheel_1_4_pad: wheel_1_3_pad {
					selection="wheel_1_4_pad";
					axis="wheel_1_4_steering_axis";
					angle0="rad -45";
					angle1="rad +45";
				};
				class wheel_2_3_pad: wheel_1_3_pad {
					selection="wheel_2_3_pad";
					axis="wheel_2_3_steering_axis";
				};
				class wheel_2_4_pad: wheel_1_4_pad {
					selection="wheel_2_4_pad";
					axis="wheel_2_4_steering_axis";
				};
				class TurnThirdWheelR: TurnFrontWheelR {
					selection="wheel_2_3_steering";
					axis="wheel_2_3_steering_axis";
					angle0="rad -30";
					angle1="rad +30";
				};
				class TurnFourthWheelR: TurnThirdWheelR {
					selection="wheel_2_4_steering";
					axis="wheel_2_4_steering_axis";
					angle0="rad -45";
					angle1="rad +45";
				};
				class TurnThirdWheelL: TurnThirdWheelR {
					selection="wheel_1_3_steering";
					axis="wheel_1_3_steering_axis";
				};
				class TurnFourthWheelL: TurnFourthWheelR {
					selection="wheel_1_4_steering";
					axis="wheel_1_4_steering_axis";
				};
				class TurnThirdWheelR2: TurnThirdWheelL
				{
					selection="posun wheel_1_3";
				};
				class TurnThirdWheelL2: TurnThirdWheelR
				{
					selection="posun wheel_2_3";
				};
				class TurnFourthWheelR2: TurnFourthWheelL
				{
					selection="posun wheel_1_4";
				};
				class TurnFourthWheelL2: TurnFourthWheelR
				{
					selection="posun wheel_2_4";
				};


				class IndicatorSpeed: IndicatorSpeed
				{
					maxValue=40.2;
					angle0="rad -135";
					angle1="rad 135";
				};
				class IndicatorRPM: IndicatorRPM
				{
					angle0="rad -135";
					angle1="rad 135";
					maxValue=3000;
				};
				class fuel
				{
					type="rotation";
					source="fuel";
					selection="fuel";
					axis="fuel_axis";
					memory=0;
					minValue=0.000000;
					maxValue=1.000000;
					angle0="rad -90";
					angle1="rad 90";
				};
				class brakelight_normal_hide {
					type = "hide";
					minValue = 0;
					maxValue = 1;
					hideValue = 0.1;
					source = "brakelight_normal_hide";
					selection = "brakelight_normal";
				};
				class brakelight_blackout_hide {
					type = "hide";
					minValue = 0;
					maxValue = 1;
					hideValue = 0.1;
					source = "blackout_hide";
					selection = "brakelight_blackout";
				};
				class blackout_hide {
					type = "hide";
					minValue = 0;
					maxValue = 1;
					hideValue = 0.1;
					source = "blackout_hide";
					selection = "blackout_marker";
				};
				class Roof_Hatch {
					type = "hide";
					minValue = 0;
					maxValue = 1;
					hideValue = 0.5;
					source = "Roof_Hatch";
					selection = "hatch_1_1";
				};
				class flatrack_hide {
					type = "hide";
					minValue = 0;
					maxValue = 1;
					source = "flatrack_hide";
					hideValue = 0.1;
					selection = "flatrack";
				};
			};
		};
		class mtvr_passengerbase: mtvr_base {
			sectionsInherit="mtvr_base";
			sections[]=
			{
				"cargo_tarp"
			};
			class Animations: Animations {
				class bed_hide { //used for flatbed versions
					type = "hide";
					minValue = 0;
					maxValue = 1;
					source = "bed_hide";
					hideValue = 0.5;
					selection = "bed_hide";
				};
				class tailgate_fold {
					type = "rotation";
					source = "tailgate_fold";
					selection = "sides";
					axis = "tailgate_axis";
					minValue = 0;
					maxValue = 1;
					angle0=0;
					angle1="rad -180";
					memory=1;
				};
				class bedside_left1_fold {
					type = "rotation";
					source = "bedside_left1_fold";
					selection = "bedside_left1";
					axis = "bedside_left_axis";
					minValue = 0;
					maxValue = 1;
					angle0=0;
					angle1="rad -180";
					memory=1;
				};
				class bedside_left2_fold: bedside_left1_fold {
					source = "bedside_left2_fold";
					selection = "bedside_left2";
				};
				class bedside_right1_fold: bedside_left1_fold {
					source = "bedside_right1_fold";
					selection = "bedside_right1";
					axis = "bedside_right_axis";
					angle1="rad 180";
				};
				class bedside_right2_fold: bedside_right1_fold {
					source = "bedside_right2_fold";
					selection = "bedside_right2";
				};
				class bedseat_fold { //named bedseat_fold because vehicle garage stuff does animate instead of animateSource and this fixes it somehow.
					type = "rotation";
					source = "bedseat_fold";
					selection = "bedseat_left1";
					axis = "bedseat_left_axis";
					minValue = 0;
					maxValue = 1;
					angle0=0;
					angle1="rad -90";
					memory=1;
				};
				class bedseat_left2_anim: bedseat_fold {
					selection = "bedseat_left2";
				};
				class bedseat_Right1_anim: bedseat_fold {
					selection = "bedseat_right1";
					axis = "bedseat_right_axis";
					angle1="rad 90";
				};
				class bedseat_right2_anim: bedseat_right1_anim {
					selection = "bedseat_right2";
				};
				class bedseat_stand_anim {
					type = "hide";
					minValue = 0;
					maxValue = 1;
					source = "bedseat_fold";
					hideValue = 0.1;
					selection = "bedseat_left_stand";
				};
				class cargo_bows_hide {
					type = "hide";
					minValue = 0;
					maxValue = 1;
					source = "cargo_cover_hide";
					hideValue = 0.5;
					selection = "cargo_bows";
				};
				class cargo_cover_hide {
					type = "hide";
					minValue = 0;
					maxValue = 1;
					source = "cargo_cover_hide";
					hideValue = 0.25;
					selection = "cargo_tarp_hide";
				};
				class cargo_bows_stored_unhide {
					type = "hide";
					minValue = 0;
					maxValue = 1;
					source = "cargo_cover_hide";
					hideValue = 0;
					unhideValue = 0.75;
					selection = "cargo_bows_stored";
				};
			};
		};
		class mtvr_lhs16: mtvr_base {};
		class mtvr_mk23: mtvr_passengerbase {};
		class mtvr_4x4: mtvr_passengerbase {};
		class mtvr_mk27: mtvr_passengerbase {};
	};
	